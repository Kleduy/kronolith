<?php
/**
 * Kronolith Hooks configuration file.
 *
 * THE HOOKS PROVIDED IN THIS FILE ARE EXAMPLES ONLY.  DO NOT ENABLE THEM
 * BLINDLY IF YOU DO NOT KNOW WHAT YOU ARE DOING.  YOU HAVE TO CUSTOMIZE THEM
 * TO MATCH YOUR SPECIFIC NEEDS AND SYSTEM ENVIRONMENT.
 *
 * For more information please see the horde/config/hooks.php.dist file.
 *
 * $Id$
 */

class Kronolith_Hooks
{
    /**
     * Adds user-defined AJAX action handlers.
     *
     * @param string $action         The AJAX action.
     * @param Horde_Variables $vars  The URL parameters.
     *
     * @return mixed  The data to send to the browser (will be JSON encoded).
     * @throws Horde_Exception
     */
//     public function ajaxaction($action, $vars)
//     {
//        switch ($action) {
//        case 'Foo':
//            return 'bar';
//        }
//
//        throw new Horde_Exception('Unknown action');
//     }
    /**
     * Called when a kronolith related preference is changed.
     *
     * If you are using ActiveSync, you should enable this hook so the user's
     * devices can pick up changes to selected sources to sync.
     */
     // public function prefs_change($pref)
     // {
     //     switch ($pref) {
     //     case 'sync_calendars':
     //          if ($GLOBALS['conf']['activesync']['enabled']) {
     //               try {
     //                    $stateMachine = $GLOBALS['injector']->getInstance('Horde_ActiveSyncState');
     //                    $stateMachine->setLogger($GLOBALS['injector']->getInstance('Horde_Log_Logger'));
     //                    $devices = $stateMachine->listDevices($GLOBALS['registry']->getAuth());
     //                    foreach ($devices as $device) {
     //                        $stateMachine->removeState(null, $device['device_id'], $GLOBALS['registry']->getAuth());
     //                    }
     //                    $GLOBALS['notification']->push(_("All state removed for your ActiveSync devices. They will resynchronize next time they connect to the server."));
     //               } catch (Horde_ActiveSync_Exception $e) {
     //                    $GLOBALS['notification']->push(_("There was an error communicating with the ActiveSync server: %s"), $e->getMessage(), 'horde.err');
     //               }
     //          }
     //     }
     // }

}
